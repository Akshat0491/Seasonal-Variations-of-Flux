# -*- coding: utf-8 -*-
"""Season Variations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TNwxXMfG8Vzd-1GnDXRjGe3TYIvTWufW
"""

import numpy as np
import matplotlib.pyplot as plt
import math as m
from numpy import *

def flux(d=0,l=0,R=6e6,a=1.4955e11,e=0.016,Lu=4e26,hr=12):
  l=pi*l/180
  d=2*pi*d/365
  phi=(hr-12)*2*pi/24
  f=Lu/((4*pi)*(((a)*(1-(e*e))/((1+(e*cos(d)))))**2))
  f=f*((cos(l)*(cos(-23*pi*cos(d)/180))*cos(phi))+(sin(l)*sin(-23*pi*cos(d)/180)))
  return f

d=np.arange(1,366,365/720)
l=np.arange(-np.pi/2,np.pi/2,np.pi/720)
# imports
import numpy as np
import matplotlib.pyplot as plt
# Generate combination of grids
X, Y = np.meshgrid(d, l)
Z = flux(d=X,l=Y)

# Draw rectangular contour plot
fig, ax = plt.subplots()
CS=plt.contour(X, Y*180/np.pi, Z, cmap='jet')
ax.clabel(CS, CS.levels, inline=True, fontsize=10)
plt.xlabel("Days",loc="center")
plt.ylabel("Lattitude",loc="center")
plt.title("Total Solar Irradiance as a function of Days and Lattitude")

def flux(d=0,l=0,R=6e6,a=1.4955e11,e=0.016,Lu=4e26,hr=12):
  l=pi*l/180
  d=2*pi*d/365
  phi=(hr-12)*2*pi/24
  f=Lu/((4*pi)*(((a)*(1-(e*e))/((1+(e*cos(d)))))**2))
  phi0=arccos(tan(l)*tan(-23*cos(d)/180))
  f=f*((cos(l)*(cos(-23*pi*cos(d)/180))*sin(phi0))+(phi0*sin(l)*sin(-23*pi*cos(d)/180)))/pi
  return f

def rel_flux(d=0,l=0,R=6e6,a=1.4955e11,e=0.016,Lu=4e26,hr=12):
  l=pi*l/180
  d=2*pi*d/365
  phi=(hr-12)*2*pi/24
  f=1
  phi0=arccos(tan(l)*tan(-23*cos(d)/180))
  f=f*((cos(l)*(cos(-23*pi*cos(d)/180))*sin(phi0))+(phi0*sin(l)*sin(-23*pi*cos(d)/180)))/pi
  return f

d=np.arange(1,366,365/720)
l=np.arange(-np.pi/2,np.pi/2,np.pi/720)
# imports
import numpy as np
import matplotlib.pyplot as plt
# Generate combination of grids
X, Y = np.meshgrid(d, l)
Z = flux(d=X, l=Y)

# Draw rectangular contour plot
fig, ax = plt.subplots()
CS=plt.contour(X, Y*180/np.pi, Z, cmap='jet')
ax.clabel(CS, CS.levels, inline=True, fontsize=10)
plt.xlabel("Days",loc="center")
plt.ylabel("Lattitude",loc="center")
plt.title("Daily Solar Flux")

d=np.arange(1,720,365/720)
l=np.arange(-np.pi/2,np.pi/2,np.pi/720)
# imports
import numpy as np
import matplotlib.pyplot as plt
# Generate combination of grids
X, Y = np.meshgrid(d, l)
Z = rel_flux(d=X, l=Y)

# Draw rectangular contour plot
fig, ax = plt.subplots()
CS=plt.contour(X, Y*180/np.pi, Z, cmap='jet')
ax.clabel(CS, CS.levels, inline=True, fontsize=10)
plt.xlabel("Days",loc="center")
plt.ylabel("Lattitude",loc="center")
plt.title("Relative Daily Solar Flux")

import matplotlib.pyplot as plt
import numpy as nump

element_ofx = nump.arange(0, 25, 4)
element_ofy = nump.arange(0, 26, 4)

# This numpy function creates 2-dimensional grid
[grid_ofX, grid_ofY] = nump.meshgrid(element_ofx, element_ofy)

# plots 2 graphs in one chart
fig, fillplot = plt.subplots(1, 1)

# Mathematical function for contour
grid_ofZ = rel_flux(d=X,l=Y)

# plots contour lines
fillplot.contourf(X, Y*180/np.pi, grid_ofZ, cmap='jet')

fillplot.set_title('Contour Plot')
fillplot.set_xlabel('features of x-axis')
fillplot.set_ylabel('features of y-axis')

plt.show()